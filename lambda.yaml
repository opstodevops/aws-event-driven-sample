AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: OrdersFunction
      Handler: index.lambda_handler
      Runtime: python3.7
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - events:PutEvents
              Resource: '*'
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: '*'
      InlineCode: |
        import json
        import logging

        logger = logging.getLogger()
        logger.setLevel(logging.INFO)

        FORCE_ERROR_ATTRIBUTE_KEY = 'force-error'

        def lambda_handler(event, context):
          logger.info('{}'.format(event))
          message = json.loads(event['Records'][0]['Sns']['Message'])

          if (FORCE_ERROR_ATTRIBUTE_KEY in message and message[FORCE_ERROR_ATTRIBUTE_KEY]):
            error_message = 'FAILED! (force-error == true)'
            logger.error(error_message)
            raise Exception(error_message)

          return event

  OrdersFunctionInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref OrdersFunction
      Qualifier: "$LATEST"
      MaximumRetryAttempts: 0
      MaximumEventAgeInSeconds: 21600

  OrdersFunctionDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: OrdersFunctionDLQ

  InventoryEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: "Inventory"

  InventoryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: '/aws/events/inventory'

  InventoryDevRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !Ref InventoryEventBus
      Name: InventoryDevRule
      EventPattern: !Sub |-
        { "account": [ "${AWS::AccountId}" ] }
      Targets:
        - Id: 'InventoryLogs'
          Arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${InventoryLogGroup}"

  InventoryLogGroupTargetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
      -   PolicyName: "AllowLogging"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - 'logs:*'
                Resource: "*"
